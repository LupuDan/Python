# Задача 10: На столе лежат n монеток.
# Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, 
# чтобы все монетки были повернуты вверх одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть

# def count_flips(coins):
#     heads = coins.count('H')  # решка
#     tails = coins.count('T')  # орел

#     flips = min(heads, tails)

#     return flips


# n = int(input("Введите количество монеток: "))
# coins = input("Введите последовательность монеток (например, 'HHHTHHT'): ")

# if len(coins) != n:
#     print("Ошибка: количество монеток не соответствует введенной последовательности!")
# else:
#     result = count_flips(coins)
#     print("Минимальное количество монет, которые нужно перевернуть:", result)


# Задача 12: Петя и Катя – брат и сестра.
# Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки.
# Он называет сумму этих чисел S и их произведение P.
# Помогите Кате отгадать задуманные Петей числа.

# def find_numbers(S, P):
#     for x in range(1, S + 1):
#         y = S - x
#         if x * y == P:
#             return x, y

#     return None


# S = int(input("Введите сумму чисел S: "))
# P = int(input("Введите произведение чисел P: "))

# result = find_numbers(S, P)
# if result:
#     x, y = result
#     print("Первое число X:", x)
#     print("Второе число Y:", y)
# else:
#     print("Числа не найдены.")


# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

def powers_of_two(N):
    power = 0
    result = []
    while 2 ** power <= N:
        result.append(2 ** power)
        power += 1
    return result


N = int(input("Введите число N: "))

result = powers_of_two(N)
print("Целые степени двойки, не превосходящие", N, ":")
for num in result:
    print(num)